import { GetStaticProps } from "next";
import Head from "next/head";
import styles from '../../styles/home.module.css';
import Image from "next/image";
import heroImg from '../../public/assets/hero.png'

import { db } from '../services/firebaseConnection';
import {
  collection,
  getDocs
} from 'firebase/firestore';

interface HomeProps{
  posts: number,
  comments: number
}

export default function Home({posts, comments}: HomeProps) {
  return (
    <div className={styles.container}>

      <Head>
        <title>Tarefas plus | Organize sua tarefas de forma fácil</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/png" href="/assets/favi.png" />
      </Head>

      <main className={styles.main}>

        <h1 className={styles.logo}>
          Tarefas <span>Plus</span>
        </h1>

        <div className={styles.logoContent}>
          <Image
            src={heroImg}
            alt="Logo Tarefas Plus"
            className={styles.hero}
            priority
          />
        </div>

        <h1 className={styles.title}>
          Sistema que Transforma seus Estudos e Organiza suas Tarefas
        </h1>

        <div className={styles.infoContent}>
          <section className={styles.box}>
            <span className={styles.span}>+ {posts} post</span>
          </section>

          <section className={styles.box}>
            <span className={styles.span}>+ {comments} comentários</span>
          </section>
        </div>

      </main>
    </div>
  );
}
 
// buscar do db e mandar para o component

export const getStaticProps: GetStaticProps = async () => {

  const commentRef = collection(db, 'comments');
  const postRef = collection(db, "tarefas");

  const commentSnapshot = await getDocs(commentRef);
  const postSnapshot = await getDocs(postRef);

  return{
    props:{
      posts: postSnapshot.size || 0,
      comments: commentSnapshot.size || 0
    },
    revalidate: 60, // seria revalidada a cada 60segundos;
  }
}